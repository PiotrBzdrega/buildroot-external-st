From 7819c5f44c634b28fd31dd62f840646fe4b16e29 Mon Sep 17 00:00:00 2001
From: Kory Maincent <kory.maincent@bootlin.com>
Date: Wed, 15 Nov 2023 15:41:59 +0100
Subject: [PATCH] stm32mp1: Update env to support boot A/B and rollback for
 stm32mp15 abd stm32mp13

Update the bootcmd_stm32mp to prepare A/B boot support with RAUC OTA tool.

Signed-off-by: Kory Maincent <kory.maincent@bootlin.com>
---
 include/configs/stm32mp13_st_common.h | 50 ++++++++++++++++++++++++---
 include/configs/stm32mp15_st_common.h | 50 ++++++++++++++++++++++++---
 2 files changed, 92 insertions(+), 8 deletions(-)

diff --git a/include/configs/stm32mp13_st_common.h b/include/configs/stm32mp13_st_common.h
index b831d0d29d..dbb0cb3b3d 100644
--- a/include/configs/stm32mp13_st_common.h
+++ b/include/configs/stm32mp13_st_common.h
@@ -34,13 +34,55 @@
 	"else " \
 		"run env_check;" \
 		"if test ${boot_device} = mmc;" \
-		"then env set boot_targets \"mmc${boot_instance}\"; fi;" \
+		"then " \
+		"  env set devtype mmc; "  \
+		"  env set devnum ${boot_instance}; "  \
+		"fi;" \
 		"if test ${boot_device} = nand ||" \
 		  " test ${boot_device} = spi-nand ;" \
-		"then env set boot_targets ubifs0; fi;" \
+		"then " \
+		"  env set devtype ubifs; "  \
+		"  env set devnum 0; "  \
+		"fi;" \
 		"if test ${boot_device} = nor;" \
-		"then env set boot_targets mmc0; fi;" \
-		"run distro_bootcmd;" \
+		"then " \
+		"  env set devtype mmc; "  \
+		"  env set devnum 0; "  \
+		"fi;" \
+		"setenv devtype mmc; setenv devnum 0; " \
+		"test -n \"${BOOT_ORDER}\" || setenv BOOT_ORDER \"A B\"; " \
+		"test -n \"${BOOT_A_LEFT}\" || setenv BOOT_A_LEFT 3; " \
+		"test -n \"${BOOT_B_LEFT}\" || setenv BOOT_B_LEFT 3; " \
+		"setenv raucslot; " \
+		"for BOOT_SLOT in \"${BOOT_ORDER}\"; do " \
+		"  if test \"x${raucslot}\" != \"x\"; then " \
+		"      echo \"skip remaining slots...\"; " \
+		"  elif test \"x${BOOT_SLOT}\" = \"xA\"; then " \
+		"    if test ${BOOT_A_LEFT} -gt 0; then " \
+		"      setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1; " \
+		"      echo \"Found valid RAUC slot A\"; " \
+		"      setenv raucslot \"rauc.slot=A\"; " \
+		"      setenv distro_bootpart 5;" \
+		"    fi; " \
+		"  elif test \"x${BOOT_SLOT}\" = \"xB\"; then " \
+		"    if test ${BOOT_B_LEFT} -gt 0; then " \
+		"      setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1; " \
+		"      echo \"Found valid RAUC slot B\"; " \
+		"      setenv raucslot \"rauc.slot=B\"; " \
+		"      setenv distro_bootpart 6;" \
+		"    fi; " \
+		"  fi; " \
+		"done; " \
+		"if test -n \"${raucslot}\"; then " \
+		"  saveenv; " \
+		"else " \
+		"  echo \"No valid RAUC slot found. Resetting tries to 3\"; " \
+		"  setenv BOOT_A_LEFT 3; " \
+		"  setenv BOOT_B_LEFT 3; " \
+		"  saveenv; " \
+		"  reset; " \
+		"fi; " \
+		"run scan_dev_for_boot; " \
 	"fi;\0"
 
 #undef CONFIG_EXTRA_ENV_SETTINGS
diff --git a/include/configs/stm32mp15_st_common.h b/include/configs/stm32mp15_st_common.h
index e9bfbc482e..beb79a8390 100644
--- a/include/configs/stm32mp15_st_common.h
+++ b/include/configs/stm32mp15_st_common.h
@@ -34,13 +34,55 @@
 	"else " \
 		"run env_check;" \
 		"if test ${boot_device} = mmc;" \
-		"then env set boot_targets \"mmc${boot_instance}\"; fi;" \
+		"then " \
+		"  env set devtype mmc; "  \
+		"  env set devnum ${boot_instance}; "  \
+		"fi;" \
 		"if test ${boot_device} = nand ||" \
 		  " test ${boot_device} = spi-nand ;" \
-		"then env set boot_targets ubifs0; fi;" \
+		"then " \
+		"  env set devtype ubifs; "  \
+		"  env set devnum 0; "  \
+		"fi;" \
 		"if test ${boot_device} = nor;" \
-		"then env set boot_targets mmc0; fi;" \
-		"run distro_bootcmd;" \
+		"then " \
+		"  env set devtype mmc; "  \
+		"  env set devnum 0; "  \
+		"fi;" \
+		"setenv devtype mmc; setenv devnum 0; " \
+		"test -n \"${BOOT_ORDER}\" || setenv BOOT_ORDER \"A B\"; " \
+		"test -n \"${BOOT_A_LEFT}\" || setenv BOOT_A_LEFT 3; " \
+		"test -n \"${BOOT_B_LEFT}\" || setenv BOOT_B_LEFT 3; " \
+		"setenv raucslot; " \
+		"for BOOT_SLOT in \"${BOOT_ORDER}\"; do " \
+		"  if test \"x${raucslot}\" != \"x\"; then " \
+		"      echo \"skip remaining slots...\"; " \
+		"  elif test \"x${BOOT_SLOT}\" = \"xA\"; then " \
+		"    if test ${BOOT_A_LEFT} -gt 0; then " \
+		"      setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1; " \
+		"      echo \"Found valid RAUC slot A\"; " \
+		"      setenv raucslot \"rauc.slot=A\"; " \
+		"      setenv distro_bootpart 5;" \
+		"    fi; " \
+		"  elif test \"x${BOOT_SLOT}\" = \"xB\"; then " \
+		"    if test ${BOOT_B_LEFT} -gt 0; then " \
+		"      setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1; " \
+		"      echo \"Found valid RAUC slot B\"; " \
+		"      setenv raucslot \"rauc.slot=B\"; " \
+		"      setenv distro_bootpart 6;" \
+		"    fi; " \
+		"  fi; " \
+		"done; " \
+		"if test -n \"${raucslot}\"; then " \
+		"  saveenv; " \
+		"else " \
+		"  echo \"No valid RAUC slot found. Resetting tries to 3\"; " \
+		"  setenv BOOT_A_LEFT 3; " \
+		"  setenv BOOT_B_LEFT 3; " \
+		"  saveenv; " \
+		"  reset; " \
+		"fi; " \
+		"run scan_dev_for_boot; " \
 	"fi;\0"
 
 #undef CONFIG_EXTRA_ENV_SETTINGS
-- 
2.25.1

